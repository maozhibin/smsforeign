<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cunyun.smsforeign.dal.dao.ExceptionLogMapper">
  <resultMap id="BaseResultMap" type="com.cunyun.smsforeign.dal.model.ExceptionLog">
    <id column="log_id" jdbcType="INTEGER" property="logId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="channel_order_no" jdbcType="VARCHAR" property="channelOrderNo" />
    <result column="product_code" jdbcType="INTEGER" property="productCode" />
    <result column="supplier_code" jdbcType="INTEGER" property="supplierCode" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cunyun.smsforeign.dal.model.ExceptionLog">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    log_id, order_id, channel_order_no, product_code, supplier_code, status, message, 
    created_time, updated_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from exception_log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="com.cunyun.smsforeign.dal.model.ExceptionLog">
    insert into exception_log (log_id, order_id, channel_order_no, 
      product_code, supplier_code, status, 
      message, created_time, updated_time, 
      content)
    values (#{logId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{channelOrderNo,jdbcType=VARCHAR}, 
      #{productCode,jdbcType=INTEGER}, #{supplierCode,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, 
      #{message,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cunyun.smsforeign.dal.model.ExceptionLog">
    insert into exception_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="channelOrderNo != null">
        channel_order_no,
      </if>
      <if test="productCode != null">
        product_code,
      </if>
      <if test="supplierCode != null">
        supplier_code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="channelOrderNo != null">
        #{channelOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        #{productCode,jdbcType=INTEGER},
      </if>
      <if test="supplierCode != null">
        #{supplierCode,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cunyun.smsforeign.dal.model.ExceptionLog">
    update exception_log
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="channelOrderNo != null">
        channel_order_no = #{channelOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        product_code = #{productCode,jdbcType=INTEGER},
      </if>
      <if test="supplierCode != null">
        supplier_code = #{supplierCode,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cunyun.smsforeign.dal.model.ExceptionLog">
    update exception_log
    set order_id = #{orderId,jdbcType=INTEGER},
      channel_order_no = #{channelOrderNo,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=INTEGER},
      supplier_code = #{supplierCode,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      message = #{message,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cunyun.smsforeign.dal.model.ExceptionLog">
    update exception_log
    set order_id = #{orderId,jdbcType=INTEGER},
      channel_order_no = #{channelOrderNo,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=INTEGER},
      supplier_code = #{supplierCode,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      message = #{message,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
</mapper>