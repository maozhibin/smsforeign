<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cunyun.smsforeign.dal.dao.LoginLogsMapper">
  <resultMap id="BaseResultMap" type="com.cunyun.smsforeign.dal.model.LoginLogs">
    <id column="login_id" jdbcType="INTEGER" property="loginId" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="http_header" jdbcType="VARCHAR" property="httpHeader" />
  </resultMap>
  <sql id="Base_Column_List">
    login_id, account_id, status, created_time, ip, http_header
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login_logs
    where login_id = #{loginId,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="com.cunyun.smsforeign.dal.model.LoginLogs">
    insert into login_logs (login_id, account_id, status, 
      created_time, ip, http_header
      )
    values (#{loginId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, #{httpHeader,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cunyun.smsforeign.dal.model.LoginLogs">
    insert into login_logs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        login_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="httpHeader != null">
        http_header,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="httpHeader != null">
        #{httpHeader,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cunyun.smsforeign.dal.model.LoginLogs">
    update login_logs
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="httpHeader != null">
        http_header = #{httpHeader,jdbcType=VARCHAR},
      </if>
    </set>
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cunyun.smsforeign.dal.model.LoginLogs">
    update login_logs
    set account_id = #{accountId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      http_header = #{httpHeader,jdbcType=VARCHAR}
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
</mapper>