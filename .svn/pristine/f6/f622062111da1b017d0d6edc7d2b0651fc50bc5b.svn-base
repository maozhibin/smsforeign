package com.cunyun.smsforeign.controller;

import com.cunyun.smsforeign.common.*;
import com.cunyun.smsforeign.dal.ReqBody;
import com.cunyun.smsforeign.dal.model.Account;
import com.cunyun.smsforeign.dal.model.SmsPlatform;
import com.cunyun.smsforeign.dal.sevice.AccountSerivce;
import com.cunyun.smsforeign.dal.sevice.SmsCharactersService;
import com.cunyun.smsforeign.dal.sevice.SmsPlatformService;
import com.cunyun.smsforeign.dal.sevice.SmsVideoService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.io.File;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@CrossOrigin
@RequestMapping("sms")
@Controller
@Slf4j
public class MainController {
    @Resource
    private AccountSerivce accountSerivce;
    @Resource
    private SmsPlatformService SmsPlatformService;
    @Resource
    private SmsCharactersService SmsCharactersService;
    @Resource
    private SmsVideoService smsVideoService;


    @ResponseBody
    @RequestMapping(value = "send" ,method = RequestMethod.POST)
    public JsonResponseMsg service(String video,String picture,String title,String mobile, String type,String userName,String password,String content,HttpServletRequest request) {
        ReqBody reqBody = new ReqBody();
        reqBody.setContent(content);
        reqBody.setTitle(title);
        reqBody.setType(type);
        reqBody.setUserName(userName);
        reqBody.setPassword(password);
        reqBody.setMobile(mobile);
        reqBody.setVideo(video);
        reqBody.setPicture(picture);
        JsonResponseMsg jsonResponseMsg = serviceCenter(reqBody, request);
        return jsonResponseMsg;
    }



    /**
     * 请求处理中心
     */
    private JsonResponseMsg serviceCenter(ReqBody reqBody, HttpServletRequest request) {
        JsonResponseMsg result = new JsonResponseMsg();
        //判断账号是否合法
        Account account = accountSerivce.queryByUserName(reqBody.getUserName());
        if(account==null || !account.getPwd().equals(reqBody.getPassword())){
           return  result.fill(JsonResponseMsg.CODE_FAIL,"账号或者密码错误","");
        }

        if(StringUtils.isEmpty(reqBody.getMobile())){
            return  result.fill(JsonResponseMsg.CODE_FAIL,"请输入手机号","");
        }
        //判断签名是否合法
//        String sign = account.getPwd()+account.getUsername();
//        if(!Md5.encrypt32(sign).equals(reqBody.getSign())){
//           return  result.fill(JsonResponseMsg.CODE_FAIL,"签名错误");
//        }
        //根据要发的短信类型进行处理
        if(StringUtils.isEmpty(reqBody.getType())){
            return  result.fill(JsonResponseMsg.CODE_FAIL,"请选择短信要发送的短信类型","");
        }

        if(StringUtils.isEmpty(reqBody.getTitle())){
            return  result.fill(JsonResponseMsg.CODE_FAIL,"请输入你要发送的标题","");
        }

        //手机号码判断归属运营商
        String mobile = reqBody.getMobile();
        String[] mobiles = mobile.split(",");
        List<String> LT = new ArrayList<>();
        List<String> YD = new ArrayList<>();
        List<String> DX = new ArrayList<>();

        for (String s:mobiles) {
            String mobileType = JudgeOperator.matchNum(s);
            if(mobileType.equals(CommonConstants.DX)){
                DX.add(s);
            }else if(mobileType.equals(CommonConstants.LT)){
                LT.add(s);
            }else if(mobileType.equals(CommonConstants.YD)){
                YD.add(s);
            }
        }

        if(reqBody.getType().equals("1")){ //普通短信
            if(StringUtils.isEmpty(reqBody.getContent())){
                return  result.fill(JsonResponseMsg.CODE_FAIL,"请输入你要发送的内容","");
            }
            List<SmsPlatform> smsPlatformsCharacters = SmsPlatformService.queryBySmsTypeAndIsEmploy(CommonConstants.SMS_COMMON);
            SmsCharactersService.smsCharacters(account,result,reqBody,smsPlatformsCharacters,LT,YD,DX);
        }else if(reqBody.getType().equals("2")){//视频短信


            List<SmsPlatform> smsPlatformsVideo= SmsPlatformService.queryBySmsTypeAndIsEmploy(CommonConstants.SMS_VIDEO);
            smsVideoService.smsVideoSend(account,result,reqBody,smsPlatformsVideo,LT,YD,DX);

        }else {
            return  result.fill(JsonResponseMsg.CODE_FAIL,"发送的短信类型选择错误","");
        }
        return  result;
    }






}
